try{if(!Nabu)throw"Nabu Manager not loaded"}catch(t){throw"Nabu Manager not loaded"}void 0===Nabu.UI&&(Nabu.UI=function(){}),Nabu.UI.Tree=function(t,e){this.events=new Nabu.EventPool,this.container=t,this.dadContainer=null,this.params=e;try{this.tree=$(t).find(".tree").get(0)}catch(t){this.tree=null}this.init()},Nabu.UI.Tree.prototype={addEventListener:function(t){this.events.addEventListener(t)},removeEventListener:function(t){this.events.removeEventListener(t)},init:function(){var t=this,e=$(this.container).find(".tree");e.length>0&&e[0].dadContainer&&e[0].dadContainer instanceof Nabu.DragAndDrop.Container&&(this.dadContainer=e[0].dadContainer,this.dadContainer.addEventListener(new Nabu.Event({onBeforeDrop:function(e){return t.events.fireEvent("onBeforeMove",t,e.params)},onDrop:function(e){return!!t.events.fireEvent("onMove",t,e.params)&&t.onMove(e.params)},onError:function(e){t.events.fireEvent("onError",t,e.params),console.log("onError")}}))),this.initEditButtonStyle(),this.initCollapseButtons(this.container),this.initToolbar(),this.initDAD()},initEditButtonStyle:function(){var t=this;"button"===this.params.editButton?$(this.container).find(".btn-editor").on("click",function(e){return t.doEditButtonClick(e)}):"line"===this.params.editButton&&$(this.container).find(".tree-level > .tree-item > .tree-item-caret").on("click",function(e){return t.doEditButtonClick(e)})},initCollapseButtons:function(t){var e=this;$(t).find(".tree-item-caret-toolbar > .btn-expand").on("click",function(t){t.stopPropagation();var n=$(this).closest(".tree-item");return e.toggleCollapsedItem(n),!1})},initToolbar:function(){var t=this;$(this.container).find(".tree-toolbar .btn").on("click",function(e){var n=$(this).data();return n.action&&t.events.fireEvent("onToolbarClick",t,{action:n.action,selection:t.getSelectedItems()}),!!n.toggle||(e.preventDefault(),!1)}),this.enableToolbarButtons()},initDAD:function(){$(this.container).find('[data-toggle="drag-item"]').on("nabu.DAD.beforeDragStart",function(){return console.log("nabu.DAD.beforeDragStart"),!0})},enableToolbarButtons:function(){var t=$(this.container).find(".tree-toolbar");if(t.length>0){var e=this.getSelectedItems();t.find(".btn").attr("disabled","disabled"),null!==e?1===e.length?t.find('[data-apply="all"], [data-apply="single"], [data-apply="multiple"]').removeAttr("disabled"):e.length>1&&t.find('[data-apply="all"], [data-apply="multiple"]').removeAttr("disabled"):t.find('[data-apply="all"]').removeAttr("disabled")}},toggleCollapsedItem:function(t){var e=$(t).closest("li");e.toggleClass("expanded");var n=$(t).data();this.events.fireEvent("onToggle",this,{id:void 0===n.id?null:n.id,expanded:e.hasClass("expanded")})},doEditButtonClick:function(t){var e=!1;if("line"===this.params.editButton)void 0===(e=$(t.currentTarget).data("id"))&&(e=$(t.currentTarget).closest("[data-id]").data("id"));else{if("button"!==this.params.editButton)throw Exception("Invalid editButton value ["+e+"]");e=$(t.currentTarget).closest("[data-id]").data("id")}this.editor(e)},editor:function(t){if("string"!=typeof this.params.editor||0===this.params.editor.length)return void console.log("Invalid editor Ajax URL");var e=this,n=void 0===t,i=n?$.sprintf(this.params.editor,""):$.sprintf(this.params.editor,t);if("ajax"===this.params.editorMode&&this.params.editorContainer.length>0){if(n)var a="new_"+(new Date).getTime()+Math.floor(900*Math.random())+100;else this.editItem(t);var r=$("#"+this.params.editorContainer);r.length>0&&r.find('[id^="'+this.params.editorContainer+'_"]').addClass("hide");var o=r.find(".myst");o.removeClass("hide");var d=n?[]:r.find('[id="'+this.params.editorContainer+"_"+t+'"]');d.length>0?(d.removeClass("hide"),o.addClass("hide"),$(this.tree).find(".tree-level > .tree-item > .tree-item-caret").removeClass("editing"),$(this.tree).find('.tree-level > .tree-item[data-id="'+t+'"] > .tree-item-caret').addClass("editing")):nabu.loadLibrary("Ajax",function(){var d=new Nabu.Ajax.Connector(i,"GET");d.addEventListener(new Nabu.Event({onLoad:function(i){var d=e.params.editorContainer+"_"+(n?a:t),s=document.createElement("DIV");if(s.id=d,s.innerHTML=i.params.text,r.append(s),n){r.find("form[data-multiform-part]").each(function(){var t=$(this).data("multiform-part");$(this).attr("data-multiform-part",$.sprintf(t,a)),$(this).data("multiform-part",$.sprintf(t,a))})}$(e.tree).find(".tree-level > .tree-item > .tree-item-caret").removeClass("editing"),$(e.tree).find('.tree-level > .tree-item[data-id="'+(n?a:t)+'"] > .tree-item-caret').addClass("editing"),e.events.fireEvent("onLoadEditor",e,{id:n?a:t,container_id:d}),o.addClass("hide")},onError:function(t){o.addClass("hide")}})),d.execute()})}else"page"===this.params.editorMode&&(document.location=i);return!1},getSelectedItems:function(){var t=[];return $(this.container).find(".tree-level > .tree-item.active").each(function(e){$(this).data("id")&&t.push($(this).data("id"))}),t.length>0?t:null},editItem:function(t){if(null!==this.tree){var e=$(this.tree).find('.tree-level > .tree-item[data-id="'+t+'"] > .tree-item-caret'),n=e.find(".tree-item-caret-flags");0===n.find(".edited").length&&$('<i class="fa fa-pencil text-danger edited pull-left"></i>').appendTo(n)}},connectForm:function(t,e){var n=$(e);if(1===n.length){var i=n.get(0);if(i.nabuForm){i.nabuForm.addEventListener(new Nabu.Event({onFieldChange:function(t,e){}}))}else console.log("Nabu.Form object not found")}else console.log("More than one forms found with same identifier")},onMove:function(t){if("string"==typeof this.params.api&&this.params.api.length>0){var e=t.drag,n=$(e).data("id");if(void 0!==n){var i=$.sprintf(this.params.api,n),a=null;if(null!==t.before){var r=$(t.before).data("id");void 0!==r&&(a=i+"?action=move&before="+r)}if(null===a&&null!==t.after){var o=$(t.after).data("id");void 0!==o&&(a=i+"?action=move&after="+o)}if(null===t.before&&null===t.after)if(null!==t.parent){var d=$(t.parent).data("id");void 0!==d&&(a=i+"?action=append&parent="+d)}else a=i+"?action=append";if(null!==a){var s=new Nabu.Ajax.Connector(a,Nabu.Ajax.POST,{withCredentials:!0,contentType:"application/json"});s.addEventListener(new Nabu.Event({onLoad:function(t){},onError:function(t){}})),s.setPostJSON({}),s.execute()}}}}},nabu.registerLibrary("Tree",["Ajax","Event"]);